{
  "297": {
    "id": 297,
    "name": "analytics",
    "variant": "declaration",
    "kind": 2,
    "flags": {},
    "children": [
      {
        "id": 366,
        "name": "configureAutoTrack",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          367
        ]
      },
      {
        "id": 369,
        "name": "disable",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          370
        ]
      },
      {
        "id": 371,
        "name": "enable",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          372
        ]
      },
      {
        "id": 373,
        "name": "flushEvents",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          374
        ]
      },
      {
        "id": 375,
        "name": "identifyUser",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          376
        ]
      },
      {
        "id": 378,
        "name": "record",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          379
        ]
      }
    ],
    "groups": [
      {
        "title": "Modules",
        "children": [
          298
        ]
      },
      {
        "title": "Type Aliases",
        "children": [
          363,
          364,
          365
        ]
      },
      {
        "title": "Functions",
        "children": [
          366,
          369,
          371,
          373,
          375,
          378
        ]
      }
    ]
  },
  "366": {
    "id": 366,
    "name": "configureAutoTrack",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      367
    ]
  },
  "367": {
    "id": 367,
    "name": "configureAutoTrack",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Configures automatic event tracking for Pinpoint. This API will automatically transmit an analytic event when\nconfigured events are detected within your application. This can include: DOM element events (via the "
        },
        {
          "kind": "code",
          "text": "`event`"
        },
        {
          "kind": "text",
          "text": "\ntracker), session events (via the "
        },
        {
          "kind": "code",
          "text": "`session`"
        },
        {
          "kind": "text",
          "text": " tracker), and page view events (via the "
        },
        {
          "kind": "code",
          "text": "`pageView`"
        },
        {
          "kind": "text",
          "text": " tracker)."
        }
      ],
      "blockTags": [
        {
          "tag": "@remark",
          "content": [
            {
              "kind": "text",
              "text": "Only session tracking is currently supported on React Native."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "service: "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "UpdateEndpointException"
            },
            {
              "kind": "text",
              "text": " - Thrown when the underlying Pinpoint service returns an error."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "AnalyticsValidationErrorCode"
            },
            {
              "kind": "text",
              "text": " - Thrown when the provided parameters or library\n configuration is incorrect."
            }
          ]
        }
      ]
    },
    "parameters": [
      368
    ],
    "type": {
      "type": "intrinsic",
      "name": "void"
    }
  },
  "368": {
    "id": 368,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "type": {
      "type": "reference",
      "target": 348,
      "name": "AnalyticsConfigureAutoTrackInput",
      "package": "@aws-amplify/analytics"
    }
  },
  "369": {
    "id": 369,
    "name": "disable",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      370
    ]
  },
  "370": {
    "id": 370,
    "name": "disable",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Disables the Analytics category."
        }
      ],
      "blockTags": [
        {
          "tag": "@note",
          "content": [
            {
              "kind": "text",
              "text": "When Analytics is disabled events will not be buffered or transmitted to your selected service. Any auto-tracking\nbehavior that you have configured via "
            },
            {
              "kind": "code",
              "text": "`configureAutoTrack`"
            },
            {
              "kind": "text",
              "text": " will not have any effect while Analytics is disabled."
            }
          ]
        }
      ]
    },
    "type": {
      "type": "intrinsic",
      "name": "void"
    }
  },
  "371": {
    "id": 371,
    "name": "enable",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      372
    ]
  },
  "372": {
    "id": 372,
    "name": "enable",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Enables the Analytics category to permit the transmission of events."
        }
      ],
      "blockTags": [
        {
          "tag": "@note",
          "content": [
            {
              "kind": "text",
              "text": "Analytics is enabled by default. You do not need to call this API unless you have disabled Analytics."
            }
          ]
        }
      ]
    },
    "type": {
      "type": "intrinsic",
      "name": "void"
    }
  },
  "373": {
    "id": 373,
    "name": "flushEvents",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      374
    ]
  },
  "374": {
    "id": 374,
    "name": "flushEvents",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Flushes all buffered Pinpoint events to the service."
        }
      ],
      "blockTags": [
        {
          "tag": "@note",
          "content": [
            {
              "kind": "text",
              "text": "This API will make a best-effort attempt to flush events from the buffer. Events recorded immediately after invoking\nthis API may not be included in the flush."
            }
          ]
        }
      ]
    },
    "type": {
      "type": "intrinsic",
      "name": "void"
    }
  },
  "375": {
    "id": 375,
    "name": "identifyUser",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      376
    ]
  },
  "376": {
    "id": 376,
    "name": "identifyUser",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Sends information about a user to Pinpoint. Sending user information allows you to associate a user to their user\nprofile and activities or actions in your application. Activity can be tracked across devices & platforms by using\nthe same "
        },
        {
          "kind": "code",
          "text": "`userId`"
        },
        {
          "kind": "text",
          "text": "."
        }
      ],
      "blockTags": [
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "service: "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "UpdateEndpointException"
            },
            {
              "kind": "text",
              "text": " - Thrown when the underlying Pinpoint service returns an error."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "AnalyticsValidationErrorCode"
            },
            {
              "kind": "text",
              "text": " - Thrown when the provided parameters or library\n configuration is incorrect."
            }
          ]
        },
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "A promise that will resolve when the operation is complete."
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\n// Identify a user with Pinpoint\nawait identifyUser({\n    userId,\n    userProfile: {\n        email: 'userEmail@example.com'\n        customProperties: {\n            phoneNumber: ['555-555-5555'],\n        },\n    }\n});\n```"
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\n// Identify a user with Pinpoint with some additional demographics\nawait identifyUser({\n    userId,\n    userProfile: {\n        email: 'userEmail@example.com'\n        customProperties: {\n            phoneNumber: ['555-555-5555'],\n        },\n        demographic: {\n            platform: 'ios',\n            timezone: 'America/Los_Angeles'\n        }\n    }\n});"
            }
          ]
        }
      ]
    },
    "parameters": [
      377
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "void"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "377": {
    "id": 377,
    "name": "params",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The input object used to construct requests sent to Pinpoint's UpdateEndpoint\n API."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 364,
      "name": "IdentifyUserInput",
      "package": "@aws-amplify/analytics"
    }
  },
  "378": {
    "id": 378,
    "name": "record",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      379
    ]
  },
  "379": {
    "id": 379,
    "name": "record",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Records an Analytic event to Pinpoint. Events will be buffered and periodically sent to Pinpoint."
        }
      ],
      "blockTags": [
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "AnalyticsValidationErrorCode"
            },
            {
              "kind": "text",
              "text": " - Thrown when the provided parameters or library\n configuration is incorrect."
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\n// Send an event to Pinpoint\nrecord({ name: eventName })\n```"
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\n// Send an event to Pinpoint with metrics & custom attributes\nrecord({\n    name: eventName,\n    attributes: {\n        'my-attribute': attributeValue\n    },\n    metrics: {\n        'my-metric': metricValue\n    }\n})\n```"
            }
          ]
        }
      ]
    },
    "parameters": [
      380
    ],
    "type": {
      "type": "intrinsic",
      "name": "void"
    }
  },
  "380": {
    "id": 380,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "type": {
      "type": "reference",
      "target": 314,
      "name": "PinpointAnalyticsEvent",
      "package": "@aws-amplify/core"
    }
  },
  "423": {
    "id": 423,
    "name": "api",
    "variant": "declaration",
    "kind": 2,
    "flags": {},
    "children": [
      {
        "id": 1343,
        "name": "del",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1344
        ]
      },
      {
        "id": 1346,
        "name": "generateClient",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1347
        ]
      },
      {
        "id": 1350,
        "name": "get",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1351
        ]
      },
      {
        "id": 1353,
        "name": "head",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1354
        ]
      },
      {
        "id": 1356,
        "name": "isCancelError",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1357
        ]
      },
      {
        "id": 1359,
        "name": "patch",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1360
        ]
      },
      {
        "id": 1362,
        "name": "post",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1363
        ]
      },
      {
        "id": 1365,
        "name": "put",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1366
        ]
      }
    ],
    "groups": [
      {
        "title": "Modules",
        "children": [
          424
        ]
      },
      {
        "title": "Enumerations",
        "children": [
          1286,
          1295
        ]
      },
      {
        "title": "Classes",
        "children": [
          1301
        ]
      },
      {
        "title": "Interfaces",
        "children": [
          1322
        ]
      },
      {
        "title": "Type Aliases",
        "children": [
          1327,
          1329,
          1333,
          1335,
          1339
        ]
      },
      {
        "title": "Variables",
        "children": [
          1342
        ]
      },
      {
        "title": "Functions",
        "children": [
          1343,
          1346,
          1350,
          1353,
          1356,
          1359,
          1362,
          1365
        ]
      }
    ]
  },
  "1343": {
    "id": 1343,
    "name": "del",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1344
    ]
  },
  "1344": {
    "id": 1344,
    "name": "del",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "DELETE HTTP request"
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "Operation for DELETE request"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "RestApiError"
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "text",
              "text": "Send a DELETE request\n"
            },
            {
              "kind": "code",
              "text": "```js\nimport { del } from '@aws-amplify/api';\n\nconst { statusCode } = await del({\n  apiName,\n  path,\n  options: {\n    headers, // Optional, A map of custom header key/values\n    queryParams, // Optional, A map of query strings\n  }\n}).response;\n```"
            }
          ]
        }
      ]
    },
    "parameters": [
      1345
    ],
    "type": {
      "type": "reference",
      "target": 1390,
      "name": "DeleteOperation",
      "package": "@aws-amplify/api-rest"
    }
  },
  "1345": {
    "id": 1345,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Input for DELETE operation"
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1389,
      "name": "DeleteInput",
      "package": "@aws-amplify/api-rest"
    }
  },
  "1346": {
    "id": 1346,
    "name": "generateClient",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1347
    ]
  },
  "1347": {
    "id": 1347,
    "name": "generateClient",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Generates an API client that can work with models or raw GraphQL"
        }
      ]
    },
    "typeParameter": [
      1348
    ],
    "parameters": [
      1349
    ],
    "type": {
      "type": "reference",
      "target": 1246,
      "typeArguments": [
        {
          "type": "reference",
          "target": 1348,
          "name": "T",
          "package": "@aws-amplify/api",
          "refersToTypeParameter": true
        }
      ],
      "name": "V6Client",
      "package": "@aws-amplify/api-graphql"
    }
  },
  "1349": {
    "id": 1349,
    "name": "options",
    "variant": "param",
    "kind": 32768,
    "flags": {
      "isOptional": true
    },
    "type": {
      "type": "reference",
      "target": 816,
      "name": "CommonPublicClientOptions",
      "package": "@aws-amplify/api-graphql"
    }
  },
  "1350": {
    "id": 1350,
    "name": "get",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1351
    ]
  },
  "1351": {
    "id": 1351,
    "name": "get",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "GET HTTP request"
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "Operation for GET request"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "RestApiError"
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "text",
              "text": "Send a GET request\n"
            },
            {
              "kind": "code",
              "text": "```js\nimport { get, isCancelError } from '@aws-amplify/api';\n\nconst { body } = await get({\n  apiName,\n  path,\n  options: {\n    headers, // Optional, A map of custom header key/values\n    body, // Optional, JSON object or FormData\n    queryParams, // Optional, A map of query strings\n  }\n}).response;\nconst data = await body.json();\n```"
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "text",
              "text": "Cancel a GET request\n\n"
            },
            {
              "kind": "code",
              "text": "```js\nimport { get, isCancelError } from '@aws-amplify/api';\n\nconst { response, cancel } = get({apiName, path, options});\ncancel(message);\ntry {\n  await response;\n} catch (e) {\n  if (isCancelError(e)) {\n   // handle request cancellation\n  }\n  //...\n}\n```"
            }
          ]
        }
      ]
    },
    "parameters": [
      1352
    ],
    "type": {
      "type": "reference",
      "target": 1392,
      "name": "GetOperation",
      "package": "@aws-amplify/api-rest"
    }
  },
  "1352": {
    "id": 1352,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Input for GET operation"
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1391,
      "name": "GetInput",
      "package": "@aws-amplify/api-rest"
    }
  },
  "1353": {
    "id": 1353,
    "name": "head",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1354
    ]
  },
  "1354": {
    "id": 1354,
    "name": "head",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "HEAD HTTP request"
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "Operation for HEAD request"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "RestApiError"
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "text",
              "text": "Send a HEAD request\n"
            },
            {
              "kind": "code",
              "text": "```js\nimport { head, isCancelError } from '@aws-amplify/api';\n\nconst { headers, statusCode } = await head({\n  apiName,\n  path,\n  options: {\n    headers, // Optional, A map of custom header key/values\n    queryParams, // Optional, A map of query strings\n  }\n}),response;\n```"
            }
          ]
        }
      ]
    },
    "parameters": [
      1355
    ],
    "type": {
      "type": "reference",
      "target": 1402,
      "name": "HeadOperation",
      "package": "@aws-amplify/api-rest"
    }
  },
  "1355": {
    "id": 1355,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Input for HEAD operation"
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1401,
      "name": "HeadInput",
      "package": "@aws-amplify/api-rest"
    }
  },
  "1356": {
    "id": 1356,
    "name": "isCancelError",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1357
    ]
  },
  "1357": {
    "id": 1357,
    "name": "isCancelError",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Check if an error is caused by user calling "
        },
        {
          "kind": "code",
          "text": "`cancel()`"
        },
        {
          "kind": "text",
          "text": " in REST API."
        }
      ],
      "blockTags": [
        {
          "tag": "@note",
          "content": [
            {
              "kind": "text",
              "text": "This function works **ONLY** for errors thrown by REST API. For GraphQL APIs, use "
            },
            {
              "kind": "code",
              "text": "`client.isCancelError(error)`"
            },
            {
              "kind": "text",
              "text": "\n  instead. "
            },
            {
              "kind": "code",
              "text": "`client`"
            },
            {
              "kind": "text",
              "text": " is generated from  "
            },
            {
              "kind": "code",
              "text": "`generateClient()`"
            },
            {
              "kind": "text",
              "text": " API from "
            },
            {
              "kind": "code",
              "text": "`aws-amplify/api`"
            },
            {
              "kind": "text",
              "text": "."
            }
          ]
        }
      ]
    },
    "parameters": [
      1358
    ],
    "type": {
      "type": "predicate",
      "name": "error",
      "asserts": false,
      "targetType": {
        "type": "reference",
        "target": {
          "sourceFileName": "packages/api-rest/dist/esm/errors/CanceledError.d.ts",
          "qualifiedName": "CanceledError"
        },
        "name": "CanceledError",
        "package": "@aws-amplify/api-rest"
      }
    }
  },
  "1358": {
    "id": 1358,
    "name": "error",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "type": {
      "type": "intrinsic",
      "name": "unknown"
    }
  },
  "1359": {
    "id": 1359,
    "name": "patch",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1360
    ]
  },
  "1360": {
    "id": 1360,
    "name": "patch",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "PATCH HTTP request"
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "Operation for PATCH request"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "RestApiError"
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "text",
              "text": "Send a PATCH request\n"
            },
            {
              "kind": "code",
              "text": "```js\nimport { patch } from '@aws-amplify/api';\n\nconst { body } = await patch({\n  apiName,\n  path,\n  options: {\n    headers, // Optional, A map of custom header key/values\n    body, // Optional, JSON object or FormData\n    queryParams, // Optional, A map of query strings\n  }\n}).response;\nconst data = await body.json();\n```"
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "text",
              "text": "Cancel a PATCH request\n"
            },
            {
              "kind": "code",
              "text": "```js\nimport { patch, isCancelError } from '@aws-amplify/api';\n\nconst { response, cancel } = patch({apiName, path, options});\ncancel(message);\ntry {\n await response;\n} catch (e) {\n if (isCancelError(e)) {\n  // handle request cancellation\n }\n//...\n}\n```"
            }
          ]
        }
      ]
    },
    "parameters": [
      1361
    ],
    "type": {
      "type": "reference",
      "target": 1405,
      "name": "PatchOperation",
      "package": "@aws-amplify/api-rest"
    }
  },
  "1361": {
    "id": 1361,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Input for PATCH operation"
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1404,
      "name": "PatchInput",
      "package": "@aws-amplify/api-rest"
    }
  },
  "1362": {
    "id": 1362,
    "name": "post",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1363
    ]
  },
  "1363": {
    "id": 1363,
    "name": "post",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "POST HTTP request"
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "Operation for POST request"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "RestApiError"
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "text",
              "text": "Send a POST request\n"
            },
            {
              "kind": "code",
              "text": "```js\nimport { post, isCancelError } from '@aws-amplify/api';\n\nconst { body } = await post({\n  apiName,\n  path,\n  options: {\n    headers, // Optional, A map of custom header key/values\n    body, // Optional, JSON object or FormData\n    queryParams, // Optional, A map of query strings\n  }\n}).response;\nconst data = await body.json();\n```"
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "text",
              "text": "Cancel a POST request\n\n"
            },
            {
              "kind": "code",
              "text": "```js\nimport { post, isCancelError } from '@aws-amplify/api';\n\nconst { response, cancel } = post({apiName, path, options});\ncancel(message);\ntry {\n  await response;\n} catch (e) {\n  if (isCancelError(e)) {\n   // handle request cancellation\n  }\n  //...\n}\n```"
            }
          ]
        }
      ]
    },
    "parameters": [
      1364
    ],
    "type": {
      "type": "reference",
      "target": 1407,
      "name": "PostOperation",
      "package": "@aws-amplify/api-rest"
    }
  },
  "1364": {
    "id": 1364,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Input for POST operation"
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1406,
      "name": "PostInput",
      "package": "@aws-amplify/api-rest"
    }
  },
  "1365": {
    "id": 1365,
    "name": "put",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1366
    ]
  },
  "1366": {
    "id": 1366,
    "name": "put",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "PUT HTTP request"
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "Operation for PUT request"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "RestApiError"
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "text",
              "text": "Send a PUT request\n"
            },
            {
              "kind": "code",
              "text": "```js\nimport { put, isCancelError } from '@aws-amplify/api';\n\nconst { body } = await put({\n  apiName,\n  path,\n  options: {\n    headers, // Optional, A map of custom header key/values\n    body, // Optional, JSON object or FormData\n    queryParams, // Optional, A map of query strings\n  }\n}).response;\nconst data = await body.json();\n```"
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "text",
              "text": "Cancel a PUT request\n"
            },
            {
              "kind": "code",
              "text": "```js\nimport { put, isCancelError } from '@aws-amplify/api';\n\nconst { response, cancel } = put({apiName, path, options});\ncancel(message);\ntry {\n await response;\n} catch (e) {\n  if (isCancelError(e)) {\n    // handle request cancellation\n  }\n//...\n}\n```"
            }
          ]
        }
      ]
    },
    "parameters": [
      1367
    ],
    "type": {
      "type": "reference",
      "target": 1409,
      "name": "PutOperation",
      "package": "@aws-amplify/api-rest"
    }
  },
  "1367": {
    "id": 1367,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Input for PUT operation"
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1408,
      "name": "PutInput",
      "package": "@aws-amplify/api-rest"
    }
  },
  "1449": {
    "id": 1449,
    "name": "auth",
    "variant": "declaration",
    "kind": 2,
    "flags": {},
    "children": [
      {
        "id": 1805,
        "name": "autoSignIn",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1806
        ]
      },
      {
        "id": 1807,
        "name": "confirmResetPassword",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1808
        ]
      },
      {
        "id": 1810,
        "name": "confirmSignIn",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1811
        ]
      },
      {
        "id": 1813,
        "name": "confirmSignUp",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1814
        ]
      },
      {
        "id": 1816,
        "name": "confirmUserAttribute",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1817
        ]
      },
      {
        "id": 1819,
        "name": "decodeJWT",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1820
        ]
      },
      {
        "id": 1822,
        "name": "deleteUser",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1823
        ]
      },
      {
        "id": 1824,
        "name": "deleteUserAttributes",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1825
        ]
      },
      {
        "id": 1827,
        "name": "fetchAuthSession",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1828
        ]
      },
      {
        "id": 1830,
        "name": "fetchDevices",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1831
        ]
      },
      {
        "id": 1832,
        "name": "fetchMFAPreference",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1833
        ]
      },
      {
        "id": 1834,
        "name": "fetchUserAttributes",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1835
        ]
      },
      {
        "id": 1836,
        "name": "forgetDevice",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1837
        ]
      },
      {
        "id": 1839,
        "name": "getCurrentUser",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1840
        ]
      },
      {
        "id": 1841,
        "name": "rememberDevice",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1842
        ]
      },
      {
        "id": 1843,
        "name": "resendSignUpCode",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1844
        ]
      },
      {
        "id": 1846,
        "name": "resetPassword",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1847
        ]
      },
      {
        "id": 1849,
        "name": "sendUserAttributeVerificationCode",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1850
        ]
      },
      {
        "id": 1852,
        "name": "setUpTOTP",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1853
        ]
      },
      {
        "id": 1854,
        "name": "signIn",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1855
        ]
      },
      {
        "id": 1857,
        "name": "signInWithRedirect",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1858
        ]
      },
      {
        "id": 1860,
        "name": "signOut",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1861
        ]
      },
      {
        "id": 1863,
        "name": "signUp",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1864
        ]
      },
      {
        "id": 1866,
        "name": "updateMFAPreference",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1867
        ]
      },
      {
        "id": 1869,
        "name": "updatePassword",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1870
        ]
      },
      {
        "id": 1872,
        "name": "updateUserAttribute",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1873
        ]
      },
      {
        "id": 1875,
        "name": "updateUserAttributes",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1876
        ]
      },
      {
        "id": 1878,
        "name": "verifyTOTPSetup",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          1879
        ]
      }
    ],
    "groups": [
      {
        "title": "Modules",
        "children": [
          1450
        ]
      },
      {
        "title": "Classes",
        "children": [
          1711
        ]
      },
      {
        "title": "Interfaces",
        "children": [
          1730,
          1735,
          1739,
          1743,
          1746,
          1752,
          1754,
          1757,
          1761,
          1767
        ]
      },
      {
        "title": "Type Aliases",
        "children": [
          1770,
          1772,
          1773,
          1774,
          1775,
          1776,
          1777,
          1778,
          1779,
          1780,
          1781,
          1782,
          1783,
          1784,
          1785,
          1786,
          1787,
          1788,
          1789,
          1790,
          1791,
          1792,
          1793,
          1794,
          1795,
          1796,
          1797,
          1798,
          1799,
          1800,
          1801,
          1802,
          1803,
          1804
        ]
      },
      {
        "title": "Functions",
        "children": [
          1805,
          1807,
          1810,
          1813,
          1816,
          1819,
          1822,
          1824,
          1827,
          1830,
          1832,
          1834,
          1836,
          1839,
          1841,
          1843,
          1846,
          1849,
          1852,
          1854,
          1857,
          1860,
          1863,
          1866,
          1869,
          1872,
          1875,
          1878
        ]
      }
    ]
  },
  "1805": {
    "id": 1805,
    "name": "autoSignIn",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1806
    ]
  },
  "1806": {
    "id": 1806,
    "name": "autoSignIn",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Signs a user in automatically after finishing the sign-up process.\n\nThis API will automatically sign a user in if the autoSignIn flow has been completed in the following cases:\n- User confirmed their account with a verification code sent to their phone or email (default option).\n- User confirmed their account with a verification link sent to their phone or email. In order to\nenable this option you need to go to the Amazon Cognito [console](https://aws.amazon.com/pm/cognito),\nlook for your userpool, then go to the "
        },
        {
          "kind": "code",
          "text": "`Messaging`"
        },
        {
          "kind": "text",
          "text": " tab and enable "
        },
        {
          "kind": "code",
          "text": "`link`"
        },
        {
          "kind": "text",
          "text": " mode inside the "
        },
        {
          "kind": "code",
          "text": "`Verification message`"
        },
        {
          "kind": "text",
          "text": " option.\nFinally you need to define the "
        },
        {
          "kind": "code",
          "text": "`signUpVerificationMethod`"
        },
        {
          "kind": "text",
          "text": " in your "
        },
        {
          "kind": "code",
          "text": "`Auth`"
        },
        {
          "kind": "text",
          "text": " config."
        }
      ],
      "blockTags": [
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```typescript\n Amplify.configure({\n   Auth: {\n    Cognito: {\n   ...cognitoConfig,\n   signUpVerificationMethod: \"link\" // the default value is \"code\"\n  }\n\t}});\n```"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AutoSignInException - Thrown when the autoSignIn flow has not started, or has been cancelled/completed."
            }
          ]
        },
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "The signInOutput."
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```typescript\n // handleSignUp.ts\nasync function handleSignUp(\n  username:string,\n  password:string\n){\n  try {\n    const { nextStep } = await signUp({\n      username,\n      password,\n      options: {\n        userAttributes:{ email:'email@email.com'},\n        autoSignIn: true // This enables the auto sign-in flow.\n      },\n    });\n\n    handleSignUpStep(nextStep);\n\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// handleConfirmSignUp.ts\nasync function handleConfirmSignUp(username:string, confirmationCode:string) {\n  try {\n    const { nextStep } = await confirmSignUp({\n      username,\n      confirmationCode,\n    });\n\n    handleSignUpStep(nextStep);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// signUpUtils.ts\nasync function handleSignUpStep( step: SignUpOutput[\"nextStep\"]) {\nswitch (step.signUpStep) {\n  case \"CONFIRM_SIGN_UP\":\n\n   // Redirect end-user to confirm-sign up screen.\n\n  case \"COMPLETE_AUTO_SIGN_IN\":\n\t   const codeDeliveryDetails = step.codeDeliveryDetails;\n    if (codeDeliveryDetails) {\n     // Redirect user to confirm-sign-up with link screen.\n    }\n    const signInOutput = await autoSignIn();\n  // handle sign-in steps\n}\n\n```"
            }
          ]
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 1792,
          "name": "SignInOutput",
          "package": "@aws-amplify/auth"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1807": {
    "id": 1807,
    "name": "confirmResetPassword",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1808
    ]
  },
  "1808": {
    "id": 1808,
    "name": "confirmResetPassword",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Confirms the new password and verification code to reset the password."
        }
      ],
      "blockTags": [
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "-"
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "ConfirmForgotPasswordException"
            },
            {
              "kind": "text",
              "text": "\nThrown due to an invalid confirmation code or password."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "-"
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "AuthValidationErrorCode"
            },
            {
              "kind": "text",
              "text": "\nThrown due to an empty confirmation code, password or username."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "parameters": [
      1809
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "void"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1809": {
    "id": 1809,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The ConfirmResetPasswordInput object."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1772,
      "name": "ConfirmResetPasswordInput",
      "package": "@aws-amplify/auth"
    }
  },
  "1810": {
    "id": 1810,
    "name": "confirmSignIn",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1811
    ]
  },
  "1811": {
    "id": 1811,
    "name": "confirmSignIn",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Continues or completes the sign in process when required by the initial call to "
        },
        {
          "kind": "code",
          "text": "`signIn`"
        },
        {
          "kind": "text",
          "text": "."
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "ConfirmSignInOutput"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "-"
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "VerifySoftwareTokenException"
            },
            {
              "kind": "text",
              "text": ":\nThrown due to an invalid MFA token."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "-"
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "RespondToAuthChallengeException"
            },
            {
              "kind": "text",
              "text": ":\nThrown due to an invalid auth challenge response."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "-"
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "AssociateSoftwareTokenException"
            },
            {
              "kind": "text",
              "text": ":\nThrown due to a service error during the MFA setup process."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "-"
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "AuthValidationErrorCode"
            },
            {
              "kind": "text",
              "text": ":\nThrown when "
            },
            {
              "kind": "code",
              "text": "`challengeResponse`"
            },
            {
              "kind": "text",
              "text": " is not defined."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "parameters": [
      1812
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 1774,
          "name": "ConfirmSignInOutput",
          "package": "@aws-amplify/auth"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1812": {
    "id": 1812,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The ConfirmSignInInput object"
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1773,
      "name": "ConfirmSignInInput",
      "package": "@aws-amplify/auth"
    }
  },
  "1813": {
    "id": 1813,
    "name": "confirmSignUp",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1814
    ]
  },
  "1814": {
    "id": 1814,
    "name": "confirmSignUp",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Confirms a new user account."
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "ConfirmSignUpOutput"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "-"
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "ConfirmSignUpException"
            },
            {
              "kind": "text",
              "text": "\nThrown due to an invalid confirmation code."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "-"
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "AuthValidationErrorCode"
            },
            {
              "kind": "text",
              "text": "\nThrown due to an empty confirmation code"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "parameters": [
      1815
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 1776,
          "name": "ConfirmSignUpOutput",
          "package": "@aws-amplify/auth"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1815": {
    "id": 1815,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The ConfirmSignUpInput object."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1775,
      "name": "ConfirmSignUpInput",
      "package": "@aws-amplify/auth"
    }
  },
  "1816": {
    "id": 1816,
    "name": "confirmUserAttribute",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1817
    ]
  },
  "1817": {
    "id": 1817,
    "name": "confirmUserAttribute",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Confirms a user attribute with the confirmation code."
        }
      ],
      "blockTags": [
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "-"
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "AuthValidationErrorCode"
            },
            {
              "kind": "text",
              "text": " -\nThrown when "
            },
            {
              "kind": "code",
              "text": "`confirmationCode`"
            },
            {
              "kind": "text",
              "text": " is not defined."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "-"
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "VerifyUserAttributeException"
            },
            {
              "kind": "text",
              "text": " - Thrown due to an invalid confirmation code or attribute."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "parameters": [
      1818
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "void"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1818": {
    "id": 1818,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The ConfirmUserAttributeInput object"
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1777,
      "name": "ConfirmUserAttributeInput",
      "package": "@aws-amplify/auth"
    }
  },
  "1819": {
    "id": 1819,
    "name": "decodeJWT",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1820
    ]
  },
  "1820": {
    "id": 1820,
    "name": "decodeJWT",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "parameters": [
      1821
    ],
    "type": {
      "type": "reference",
      "target": 1757,
      "name": "JWT",
      "package": "@aws-amplify/core"
    }
  },
  "1821": {
    "id": 1821,
    "name": "token",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "type": {
      "type": "intrinsic",
      "name": "string"
    }
  },
  "1822": {
    "id": 1822,
    "name": "deleteUser",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1823
    ]
  },
  "1823": {
    "id": 1823,
    "name": "deleteUser",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Deletes a user from the user pool while authenticated."
        }
      ],
      "blockTags": [
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "DeleteUserException"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "void"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1824": {
    "id": 1824,
    "name": "deleteUserAttributes",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1825
    ]
  },
  "1825": {
    "id": 1825,
    "name": "deleteUserAttributes",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Deletes user attributes."
        }
      ],
      "blockTags": [
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "-"
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "DeleteUserAttributesException"
            },
            {
              "kind": "text",
              "text": " - Thrown due to invalid attribute."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "parameters": [
      1826
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "void"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1826": {
    "id": 1826,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The DeleteUserAttributesInput object"
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1778,
      "name": "DeleteUserAttributesInput",
      "package": "@aws-amplify/auth"
    }
  },
  "1827": {
    "id": 1827,
    "name": "fetchAuthSession",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1828
    ]
  },
  "1828": {
    "id": 1828,
    "name": "fetchAuthSession",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "parameters": [
      1829
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 1730,
          "name": "AuthSession",
          "package": "@aws-amplify/core"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1829": {
    "id": 1829,
    "name": "options",
    "variant": "param",
    "kind": 32768,
    "flags": {
      "isOptional": true
    },
    "type": {
      "type": "reference",
      "target": 1752,
      "name": "FetchAuthSessionOptions",
      "package": "@aws-amplify/core"
    }
  },
  "1830": {
    "id": 1830,
    "name": "fetchDevices",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1831
    ]
  },
  "1831": {
    "id": 1831,
    "name": "fetchDevices",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Fetches devices that have been remembered using "
        },
        {
          "kind": "inline-tag",
          "tag": "@link",
          "text": "rememberDevice",
          "target": 1841
        },
        {
          "kind": "text",
          "text": "\nfor the currently authenticated user."
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "FetchDevicesOutput"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "ListDevicesException"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 1779,
          "name": "FetchDevicesOutput",
          "package": "@aws-amplify/auth"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1832": {
    "id": 1832,
    "name": "fetchMFAPreference",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1833
    ]
  },
  "1833": {
    "id": 1833,
    "name": "fetchMFAPreference",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Fetches the preferred MFA setting and enabled MFA settings for the user."
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "FetchMFAPreferenceOutput"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "-"
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "GetUserException"
            },
            {
              "kind": "text",
              "text": " : error thrown when the service fails to fetch MFA preference\nand settings."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 1754,
          "name": "FetchMFAPreferenceOutput",
          "package": "@aws-amplify/auth"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1834": {
    "id": 1834,
    "name": "fetchUserAttributes",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1835
    ]
  },
  "1835": {
    "id": 1835,
    "name": "fetchUserAttributes",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Fetches the current user attributes while authenticated."
        }
      ],
      "blockTags": [
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "GetUserException"
            },
            {
              "kind": "text",
              "text": " - Cognito service errors thrown when the service is not able to get the user."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 1780,
          "name": "FetchUserAttributesOutput",
          "package": "@aws-amplify/auth"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1836": {
    "id": 1836,
    "name": "forgetDevice",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1837
    ]
  },
  "1837": {
    "id": 1837,
    "name": "forgetDevice",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Forget a remembered device while authenticated."
        }
      ],
      "blockTags": [
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "ForgetDeviceException"
            },
            {
              "kind": "text",
              "text": " - Cognito service errors thrown when\nforgetting device with invalid device key"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "parameters": [
      1838
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "void"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1838": {
    "id": 1838,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {
      "isOptional": true
    },
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The ForgetDeviceInput object."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1491,
      "name": "AuthForgetDeviceInput",
      "package": "@aws-amplify/auth"
    }
  },
  "1839": {
    "id": 1839,
    "name": "getCurrentUser",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1840
    ]
  },
  "1840": {
    "id": 1840,
    "name": "getCurrentUser",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Gets the current user from the idToken."
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "GetCurrentUserOutput"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "InitiateAuthException"
            },
            {
              "kind": "text",
              "text": " - Thrown when the service fails to refresh the tokens."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 1739,
          "name": "AuthUser",
          "package": "@aws-amplify/auth"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1841": {
    "id": 1841,
    "name": "rememberDevice",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1842
    ]
  },
  "1842": {
    "id": 1842,
    "name": "rememberDevice",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Marks device as remembered while authenticated."
        }
      ],
      "blockTags": [
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "UpdateDeviceStatusException"
            },
            {
              "kind": "text",
              "text": " - Cognito service errors thrown when\nsetting device status to remembered using an invalid device key."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "void"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1843": {
    "id": 1843,
    "name": "resendSignUpCode",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1844
    ]
  },
  "1844": {
    "id": 1844,
    "name": "resendSignUpCode",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Resend the confirmation code while signing up"
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "ResendSignUpCodeOutput"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "service: "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "ResendConfirmationException"
            },
            {
              "kind": "text",
              "text": " - Cognito service errors thrown when resending the code."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "AuthValidationErrorCode"
            },
            {
              "kind": "text",
              "text": " - Validation errors thrown either username are not defined."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "parameters": [
      1845
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 1785,
          "name": "ResendSignUpCodeOutput",
          "package": "@aws-amplify/auth"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1845": {
    "id": 1845,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The ResendSignUpCodeInput object"
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1784,
      "name": "ResendSignUpCodeInput",
      "package": "@aws-amplify/auth"
    }
  },
  "1846": {
    "id": 1846,
    "name": "resetPassword",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1847
    ]
  },
  "1847": {
    "id": 1847,
    "name": "resetPassword",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Resets a user's password."
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "ResetPasswordOutput"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "-"
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "ForgotPasswordException"
            },
            {
              "kind": "text",
              "text": "\nThrown due to an invalid confirmation code or password."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "-"
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "AuthValidationErrorCode"
            },
            {
              "kind": "text",
              "text": "\nThrown due to an empty username."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "parameters": [
      1848
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 1787,
          "name": "ResetPasswordOutput",
          "package": "@aws-amplify/auth"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1848": {
    "id": 1848,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The ResetPasswordInput object."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1786,
      "name": "ResetPasswordInput",
      "package": "@aws-amplify/auth"
    }
  },
  "1849": {
    "id": 1849,
    "name": "sendUserAttributeVerificationCode",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1850
    ]
  },
  "1850": {
    "id": 1850,
    "name": "sendUserAttributeVerificationCode",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Resends user's confirmation code when updating attributes while authenticated."
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "SendUserAttributeVerificationCodeOutput"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "GetUserAttributeVerificationException"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "parameters": [
      1851
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 1789,
          "name": "SendUserAttributeVerificationCodeOutput",
          "package": "@aws-amplify/auth"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1851": {
    "id": 1851,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The SendUserAttributeVerificationCodeInput object"
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1788,
      "name": "SendUserAttributeVerificationCodeInput",
      "package": "@aws-amplify/auth"
    }
  },
  "1852": {
    "id": 1852,
    "name": "setUpTOTP",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1853
    ]
  },
  "1853": {
    "id": 1853,
    "name": "setUpTOTP",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Sets up TOTP for the user."
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "SetUpTOTPOutput"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "-"
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "AssociateSoftwareTokenException"
            },
            {
              "kind": "text",
              "text": "\nThrown if a service occurs while setting up TOTP."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 1790,
          "name": "SetUpTOTPOutput",
          "package": "@aws-amplify/auth"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1854": {
    "id": 1854,
    "name": "signIn",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1855
    ]
  },
  "1855": {
    "id": 1855,
    "name": "signIn",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Signs a user in"
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "SignInOutput"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "service: "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "InitiateAuthException"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "RespondToAuthChallengeException"
            },
            {
              "kind": "text",
              "text": "\n - Cognito service errors thrown during the sign-in process."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "AuthValidationErrorCode"
            },
            {
              "kind": "text",
              "text": " - Validation errors thrown when either username or password\n are not defined."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "parameters": [
      1856
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 1792,
          "name": "SignInOutput",
          "package": "@aws-amplify/auth"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1856": {
    "id": 1856,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The SignInInput object"
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1791,
      "name": "SignInInput",
      "package": "@aws-amplify/auth"
    }
  },
  "1857": {
    "id": 1857,
    "name": "signInWithRedirect",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1858
    ]
  },
  "1858": {
    "id": 1858,
    "name": "signInWithRedirect",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Signs in a user with OAuth. Redirects the application to an Identity Provider."
        }
      ],
      "blockTags": [
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the user pool config is invalid."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "OAuthNotConfigureException - Thrown when the oauth config is invalid."
            }
          ]
        }
      ]
    },
    "parameters": [
      1859
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "void"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1859": {
    "id": 1859,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {
      "isOptional": true
    },
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The SignInWithRedirectInput object, if empty it will redirect to Cognito HostedUI"
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1528,
      "name": "AuthSignInWithRedirectInput",
      "package": "@aws-amplify/auth"
    }
  },
  "1860": {
    "id": 1860,
    "name": "signOut",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1861
    ]
  },
  "1861": {
    "id": 1861,
    "name": "signOut",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Signs a user out"
        }
      ],
      "blockTags": [
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "parameters": [
      1862
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "void"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1862": {
    "id": 1862,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {
      "isOptional": true
    },
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The SignOutInput object"
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1536,
      "name": "AuthSignOutInput",
      "package": "@aws-amplify/auth"
    }
  },
  "1863": {
    "id": 1863,
    "name": "signUp",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1864
    ]
  },
  "1864": {
    "id": 1864,
    "name": "signUp",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Creates a user"
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "SignUpOutput"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "service: "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "SignUpException"
            },
            {
              "kind": "text",
              "text": " - Cognito service errors thrown during the sign-up process."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "AuthValidationErrorCode"
            },
            {
              "kind": "text",
              "text": " - Validation errors thrown either username or password\n are not defined."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "parameters": [
      1865
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 1796,
          "name": "SignUpOutput",
          "package": "@aws-amplify/auth"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1865": {
    "id": 1865,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The SignUpInput object"
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1795,
      "name": "SignUpInput",
      "package": "@aws-amplify/auth"
    }
  },
  "1866": {
    "id": 1866,
    "name": "updateMFAPreference",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1867
    ]
  },
  "1867": {
    "id": 1867,
    "name": "updateMFAPreference",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Updates the MFA preference of the user."
        }
      ],
      "blockTags": [
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "-"
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "SetUserMFAPreferenceException"
            },
            {
              "kind": "text",
              "text": " - Service error thrown when the MFA preference cannot be updated."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "parameters": [
      1868
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "void"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1868": {
    "id": 1868,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The UpdateMFAPreferenceInput object."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1767,
      "name": "UpdateMFAPreferenceInput",
      "package": "@aws-amplify/auth"
    }
  },
  "1869": {
    "id": 1869,
    "name": "updatePassword",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1870
    ]
  },
  "1870": {
    "id": 1870,
    "name": "updatePassword",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Updates user's password while authenticated."
        }
      ],
      "blockTags": [
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "ChangePasswordException"
            },
            {
              "kind": "text",
              "text": " - Cognito service errors thrown when updating a password."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "AuthValidationErrorCode"
            },
            {
              "kind": "text",
              "text": " - Validation errors thrown when oldPassword or newPassword are empty."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "parameters": [
      1871
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "void"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1871": {
    "id": 1871,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The UpdatePasswordInput object."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1557,
      "name": "AuthUpdatePasswordInput",
      "package": "@aws-amplify/auth"
    }
  },
  "1872": {
    "id": 1872,
    "name": "updateUserAttribute",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1873
    ]
  },
  "1873": {
    "id": 1873,
    "name": "updateUserAttribute",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Updates user's attribute while authenticated."
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "UpdateUserAttributeOutput"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "UpdateUserAttributesException"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "parameters": [
      1874
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 1799,
          "name": "UpdateUserAttributeOutput",
          "package": "@aws-amplify/auth"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1874": {
    "id": 1874,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The UpdateUserAttributeInput object"
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1798,
      "name": "UpdateUserAttributeInput",
      "package": "@aws-amplify/auth"
    }
  },
  "1875": {
    "id": 1875,
    "name": "updateUserAttributes",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1876
    ]
  },
  "1876": {
    "id": 1876,
    "name": "updateUserAttributes",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Updates user's attributes while authenticated."
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "UpdateUserAttributesOutput"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "- "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "UpdateUserAttributesException"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "parameters": [
      1877
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 1801,
          "name": "UpdateUserAttributesOutput",
          "package": "@aws-amplify/auth"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1877": {
    "id": 1877,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The UpdateUserAttributesInput object"
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1800,
      "name": "UpdateUserAttributesInput",
      "package": "@aws-amplify/auth"
    }
  },
  "1878": {
    "id": 1878,
    "name": "verifyTOTPSetup",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      1879
    ]
  },
  "1879": {
    "id": 1879,
    "name": "verifyTOTPSetup",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Verifies an OTP code retrieved from an associated authentication app."
        }
      ],
      "blockTags": [
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "-"
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "VerifySoftwareTokenException"
            },
            {
              "kind": "text",
              "text": ":\nThrown due to an invalid MFA token."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "-"
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "AuthValidationErrorCode"
            },
            {
              "kind": "text",
              "text": ":\nThrown when "
            },
            {
              "kind": "code",
              "text": "`code`"
            },
            {
              "kind": "text",
              "text": " is not defined."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "AuthTokenConfigException - Thrown when the token provider config is invalid."
            }
          ]
        }
      ]
    },
    "parameters": [
      1880
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "void"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "1880": {
    "id": 1880,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The VerifyTOTPSetupInput"
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 1804,
      "name": "VerifyTOTPSetupInput",
      "package": "@aws-amplify/auth"
    }
  },
  "3820": {
    "id": 3820,
    "name": "in-app-messaging",
    "variant": "declaration",
    "kind": 2,
    "flags": {},
    "children": [
      {
        "id": 3891,
        "name": "clearMessages",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          3892
        ]
      },
      {
        "id": 3893,
        "name": "dispatchEvent",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          3894
        ]
      },
      {
        "id": 3896,
        "name": "identifyUser",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          3897
        ]
      },
      {
        "id": 3899,
        "name": "initializeInAppMessaging",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          3900
        ]
      },
      {
        "id": 3901,
        "name": "notifyMessageInteraction",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          3902
        ]
      },
      {
        "id": 3904,
        "name": "onMessageActionTaken",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          3905
        ]
      },
      {
        "id": 3907,
        "name": "onMessageDismissed",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          3908
        ]
      },
      {
        "id": 3910,
        "name": "onMessageDisplayed",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          3911
        ]
      },
      {
        "id": 3913,
        "name": "onMessageReceived",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          3914
        ]
      },
      {
        "id": 3916,
        "name": "setConflictHandler",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          3917
        ]
      },
      {
        "id": 3919,
        "name": "syncMessages",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          3920
        ]
      }
    ],
    "groups": [
      {
        "title": "Modules",
        "children": [
          3821
        ]
      },
      {
        "title": "Interfaces",
        "children": [
          3850,
          3855,
          3860,
          3867,
          3869,
          3874
        ]
      },
      {
        "title": "Type Aliases",
        "children": [
          3877,
          3878,
          3879,
          3880,
          3881,
          3882,
          3883,
          3884,
          3885,
          3886,
          3887,
          3888,
          3889,
          3890
        ]
      },
      {
        "title": "Functions",
        "children": [
          3891,
          3893,
          3896,
          3899,
          3901,
          3904,
          3907,
          3910,
          3913,
          3916,
          3919
        ]
      }
    ]
  },
  "3891": {
    "id": 3891,
    "name": "clearMessages",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      3892
    ]
  },
  "3892": {
    "id": 3892,
    "name": "clearMessages",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Clear locally cached messages."
        }
      ],
      "blockTags": [
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "InAppMessagingValidationErrorCode"
            },
            {
              "kind": "text",
              "text": " - Thrown if In App messaging hasn't been initialized."
            }
          ]
        },
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "A promise that will resolve when the operation is complete."
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\n// Clear locally cached messages.\nawait clearMessages();\n\n```"
            }
          ]
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "void"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "3893": {
    "id": 3893,
    "name": "dispatchEvent",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      3894
    ]
  },
  "3894": {
    "id": 3894,
    "name": "dispatchEvent",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Triggers an In-App message to be displayed. Use this after your campaigns have been synced to the device using\n"
        },
        {
          "kind": "inline-tag",
          "tag": "@link",
          "text": "syncMessages",
          "target": 3919
        },
        {
          "kind": "text",
          "text": ". Based on the messages synced and the event passed to this API, it triggers the display\nof the In-App message that meets the criteria."
        }
      ],
      "blockTags": [
        {
          "tag": "@remark",
          "content": [
            {
              "kind": "text",
              "text": "If an event would trigger multiple messages, the message closest to expiry will be chosen by default.\nTo change this behavior, you can use the "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "setConflictHandler",
              "target": 3916
            },
            {
              "kind": "text",
              "text": " API to provide\nyour own logic for resolving message conflicts."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "InAppMessagingValidationErrorCode"
            },
            {
              "kind": "text",
              "text": " - Thrown when the provided parameters or library\nconfiguration is incorrect, or if In App messaging hasn't been initialized."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "service exceptions - Thrown when the underlying Pinpoint service returns an error."
            }
          ]
        },
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "A promise that will resolve when the operation is complete."
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\n// Sync message before disptaching an event\nawait syncMessages();\n\n// Dispatch an event\nawait dispatchEvent({ name: 'test_event' });\n```"
            }
          ]
        }
      ]
    },
    "parameters": [
      3895
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "void"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "3895": {
    "id": 3895,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The input object that holds the event to be dispatched."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 3830,
      "name": "InAppMessagingEvent",
      "package": "@aws-amplify/notifications"
    }
  },
  "3896": {
    "id": 3896,
    "name": "identifyUser",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      3897
    ]
  },
  "3897": {
    "id": 3897,
    "name": "identifyUser",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Sends information about a user to Pinpoint. Sending user information allows you to associate a user to their user\nprofile and activities or actions in your application. Activity can be tracked across devices & platforms by using\nthe same "
        },
        {
          "kind": "code",
          "text": "`userId`"
        },
        {
          "kind": "text",
          "text": "."
        }
      ],
      "blockTags": [
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "service: "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "UpdateEndpointException"
            },
            {
              "kind": "text",
              "text": " - Thrown when the underlying Pinpoint service returns an error."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "InAppMessagingValidationErrorCode"
            },
            {
              "kind": "text",
              "text": " - Thrown when the provided parameters or library\nconfiguration is incorrect, or if In App messaging hasn't been initialized."
            }
          ]
        },
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "A promise that will resolve when the operation is complete."
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\n// Identify a user with Pinpoint\nawait identifyUser({\n    userId,\n    userProfile: {\n        email: 'userEmail@example.com'\n        customProperties: {\n            phoneNumber: ['555-555-5555'],\n        },\n    }\n});\n```"
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\n// Identify a user with Pinpoint specific options\nawait identifyUser({\n    userId,\n    userProfile: {\n        email: 'userEmail@example.com'\n        customProperties: {\n            phoneNumber: ['555-555-5555'],\n        },\n        demographic: {\n            platform: 'ios',\n            timezone: 'America/Los_Angeles'\n        }\n    },\n    options: {\n        address: 'device-address',\n        optOut: 'NONE',\n        userAttributes: {\n            interests: ['food']\n        },\n    },\n});"
            }
          ]
        }
      ]
    },
    "parameters": [
      3898
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "void"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "3898": {
    "id": 3898,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The input object that conforms to "
        },
        {
          "kind": "inline-tag",
          "tag": "@link",
          "text": "IdentifyUserInput",
          "target": 3878,
          "tsLinkText": ""
        },
        {
          "kind": "text",
          "text": " used to construct requests sent to Pinpoint's UpdateEndpoint\n API."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 3878,
      "name": "IdentifyUserInput",
      "package": "@aws-amplify/notifications"
    }
  },
  "3899": {
    "id": 3899,
    "name": "initializeInAppMessaging",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      3900
    ]
  },
  "3900": {
    "id": 3900,
    "name": "initializeInAppMessaging",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Initialize and set up in-app messaging category. This API needs to be called to enable other InAppMessaging APIs."
        }
      ],
      "blockTags": [
        {
          "tag": "@remarks",
          "content": [
            {
              "kind": "text",
              "text": "Make sure to call this early in your app at the root entry point after configuring Amplify."
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\nAmplify.configure(config);\ninitializeInAppMessaging();\n```"
            }
          ]
        }
      ]
    },
    "type": {
      "type": "intrinsic",
      "name": "void"
    }
  },
  "3901": {
    "id": 3901,
    "name": "notifyMessageInteraction",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      3902
    ]
  },
  "3902": {
    "id": 3902,
    "name": "notifyMessageInteraction",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Notifies the respective listener of the specified type with the message given."
        }
      ],
      "blockTags": [
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "InAppMessagingValidationErrorCode"
            },
            {
              "kind": "text",
              "text": " - Thrown when the provided parameters or library\nconfiguration is incorrect, or if In App messaging hasn't been initialized."
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\nonMessageRecieved((message) => {\n  // Show end users the In-App message and notify event listeners\n  notifyMessageInteraction({ type: 'messageDisplayed', message });\n});\n```"
            }
          ]
        }
      ]
    },
    "parameters": [
      3903
    ],
    "type": {
      "type": "intrinsic",
      "name": "void"
    }
  },
  "3903": {
    "id": 3903,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The input object that holds the type and message."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 3874,
      "name": "NotifyMessageInteractionInput",
      "package": "@aws-amplify/notifications"
    }
  },
  "3904": {
    "id": 3904,
    "name": "onMessageActionTaken",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      3905
    ]
  },
  "3905": {
    "id": 3905,
    "name": "onMessageActionTaken",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Registers a callback that will be invoked on "
        },
        {
          "kind": "code",
          "text": "`messageActionTaken`"
        },
        {
          "kind": "text",
          "text": " events."
        }
      ],
      "blockTags": [
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "InAppMessagingValidationErrorCode"
            },
            {
              "kind": "text",
              "text": " - Thrown when the provided parameters or library\nconfiguration is incorrect, or if In App messaging hasn't been initialized."
            }
          ]
        },
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "- An object that holds a remove method to stop listening to events."
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\nonMessageActionTaken((message) => {\n  // use the message\n  console.log(message.id);\n});\n```"
            }
          ]
        }
      ]
    },
    "parameters": [
      3906
    ],
    "type": {
      "type": "reference",
      "target": 3883,
      "name": "OnMessageActionTakenOutput",
      "package": "@aws-amplify/notifications"
    }
  },
  "3906": {
    "id": 3906,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The input object that holds the callback handler."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 3846,
      "name": "OnMessageInteractionEventHandler",
      "package": "@aws-amplify/notifications"
    }
  },
  "3907": {
    "id": 3907,
    "name": "onMessageDismissed",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      3908
    ]
  },
  "3908": {
    "id": 3908,
    "name": "onMessageDismissed",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Registers a callback that will be invoked on "
        },
        {
          "kind": "code",
          "text": "`messageDismissed`"
        },
        {
          "kind": "text",
          "text": " events."
        }
      ],
      "blockTags": [
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "InAppMessagingValidationErrorCode"
            },
            {
              "kind": "text",
              "text": " - Thrown when the provided parameters or library\nconfiguration is incorrect, or if In App messaging hasn't been initialized."
            }
          ]
        },
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "- An object that holds a remove method to stop listening to events."
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\nonMessageDismissed((message) => {\n  // use the message\n  console.log(message.id);\n});\n```"
            }
          ]
        }
      ]
    },
    "parameters": [
      3909
    ],
    "type": {
      "type": "reference",
      "target": 3885,
      "name": "OnMessageDismissedOutput",
      "package": "@aws-amplify/notifications"
    }
  },
  "3909": {
    "id": 3909,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The input object that holds the callback handler."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 3846,
      "name": "OnMessageInteractionEventHandler",
      "package": "@aws-amplify/notifications"
    }
  },
  "3910": {
    "id": 3910,
    "name": "onMessageDisplayed",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      3911
    ]
  },
  "3911": {
    "id": 3911,
    "name": "onMessageDisplayed",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Registers a callback that will be invoked on "
        },
        {
          "kind": "code",
          "text": "`messageDisplayed`"
        },
        {
          "kind": "text",
          "text": " events."
        }
      ],
      "blockTags": [
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "InAppMessagingValidationErrorCode"
            },
            {
              "kind": "text",
              "text": " - Thrown when the provided parameters or library\nconfiguration is incorrect, or if In App messaging hasn't been initialized."
            }
          ]
        },
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "- An object that holds a remove method to stop listening to events."
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\nonMessageDisplayed((message) => {\n  // use the message\n\t console.log(message.id);\n});\n```"
            }
          ]
        }
      ]
    },
    "parameters": [
      3912
    ],
    "type": {
      "type": "reference",
      "target": 3887,
      "name": "OnMessageDisplayedOutput",
      "package": "@aws-amplify/notifications"
    }
  },
  "3912": {
    "id": 3912,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The input object that holds the callback handler."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 3846,
      "name": "OnMessageInteractionEventHandler",
      "package": "@aws-amplify/notifications"
    }
  },
  "3913": {
    "id": 3913,
    "name": "onMessageReceived",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      3914
    ]
  },
  "3914": {
    "id": 3914,
    "name": "onMessageReceived",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Registers a callback that will be invoked on "
        },
        {
          "kind": "code",
          "text": "`messageReceived`"
        },
        {
          "kind": "text",
          "text": " events."
        }
      ],
      "blockTags": [
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "InAppMessagingValidationErrorCode"
            },
            {
              "kind": "text",
              "text": " - Thrown when the provided parameters or library\nconfiguration is incorrect, or if In App messaging hasn't been initialized."
            }
          ]
        },
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "- An object that holds a remove method to stop listening to events."
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\nonMessageReceived((message) => {\n  // use the message\n  console.log(message.id);\n});\n```"
            }
          ]
        }
      ]
    },
    "parameters": [
      3915
    ],
    "type": {
      "type": "reference",
      "target": 3889,
      "name": "OnMessageReceivedOutput",
      "package": "@aws-amplify/notifications"
    }
  },
  "3915": {
    "id": 3915,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The input object that holds the callback handler."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 3846,
      "name": "OnMessageInteractionEventHandler",
      "package": "@aws-amplify/notifications"
    }
  },
  "3916": {
    "id": 3916,
    "name": "setConflictHandler",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      3917
    ]
  },
  "3917": {
    "id": 3917,
    "name": "setConflictHandler",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Set a conflict handler that will be used to resolve conflicts that may emerge\nwhen matching events with synced messages."
        }
      ],
      "blockTags": [
        {
          "tag": "@remark",
          "content": [
            {
              "kind": "text",
              "text": "The conflict handler is not persisted across app restarts and so must be set again before dispatching an event for\nany custom handling to take effect."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "InAppMessagingValidationErrorCode"
            },
            {
              "kind": "text",
              "text": " - Thrown when the provided parameters or library\nconfiguration is incorrect, or if In App messaging hasn't been initialized."
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\n// Sync messages before dispatching an event\nawait syncMessages();\n\n// Example custom conflict handler\nconst myConflictHandler = (messages) => {\n\t\t// Return a random message\n\t\tconst randomIndex = Math.floor(Math.random() * messages.length);\n\t\treturn messages[randomIndex];\n };\n\n// Set the conflict handler\nsetConflictHandler(myConflictHandler);\n\n// Dispatch an event\nawait dispatchEvent({ name: 'test_event' });\n```"
            }
          ]
        }
      ]
    },
    "parameters": [
      3918
    ],
    "type": {
      "type": "intrinsic",
      "name": "void"
    }
  },
  "3918": {
    "id": 3918,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The input object that holds the conflict handler to be used."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 3840,
      "name": "InAppMessageConflictHandler",
      "package": "@aws-amplify/notifications"
    }
  },
  "3919": {
    "id": 3919,
    "name": "syncMessages",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      3920
    ]
  },
  "3920": {
    "id": 3920,
    "name": "syncMessages",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Fetch and persist messages from Pinpoint campaigns.\nCalling this API is necessary to trigger InApp messages on the device."
        }
      ],
      "blockTags": [
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "service exceptions - Thrown when the underlying Pinpoint service returns an error."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "InAppMessagingValidationErrorCode"
            },
            {
              "kind": "text",
              "text": " - Thrown when the provided parameters or library\nconfiguration is incorrect, or if In App messaging hasn't been initialized."
            }
          ]
        },
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "A promise that will resolve when the operation is complete."
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\n// Sync InApp messages with Pinpoint and device.\nawait syncMessages();\n\n```"
            }
          ]
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "void"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "4339": {
    "id": 4339,
    "name": "storage",
    "variant": "declaration",
    "kind": 2,
    "flags": {},
    "children": [
      {
        "id": 4601,
        "name": "copy",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          4602,
          4604
        ]
      },
      {
        "id": 4606,
        "name": "downloadData",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          4607,
          4609
        ]
      },
      {
        "id": 4611,
        "name": "getProperties",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          4612,
          4614
        ]
      },
      {
        "id": 4616,
        "name": "getUrl",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          4617,
          4619
        ]
      },
      {
        "id": 4621,
        "name": "isCancelError",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          4622
        ]
      },
      {
        "id": 4624,
        "name": "list",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          4625,
          4627,
          4629,
          4631
        ]
      },
      {
        "id": 4633,
        "name": "remove",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          4634,
          4636
        ]
      },
      {
        "id": 4638,
        "name": "uploadData",
        "variant": "declaration",
        "kind": 64,
        "flags": {},
        "signatures": [
          4639,
          4641
        ]
      }
    ],
    "groups": [
      {
        "title": "Modules",
        "children": [
          4340
        ]
      },
      {
        "title": "Classes",
        "children": [
          4543
        ]
      },
      {
        "title": "Interfaces",
        "children": [
          4562
        ]
      },
      {
        "title": "Type Aliases",
        "children": [
          4565,
          4566,
          4567,
          4568,
          4569,
          4570,
          4571,
          4572,
          4573,
          4574,
          4575,
          4576,
          4577,
          4578,
          4579,
          4580,
          4581,
          4582,
          4583,
          4584,
          4585,
          4586,
          4589,
          4590,
          4593,
          4594,
          4595,
          4596,
          4597,
          4598,
          4599,
          4600
        ]
      },
      {
        "title": "Functions",
        "children": [
          4601,
          4606,
          4611,
          4616,
          4621,
          4624,
          4633,
          4638
        ]
      }
    ]
  },
  "4601": {
    "id": 4601,
    "name": "copy",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      4602,
      4604
    ]
  },
  "4602": {
    "id": 4602,
    "name": "copy",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Copy an object from a source to a destination object within the same bucket."
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "Output containing the destination object path."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "service: "
            },
            {
              "kind": "code",
              "text": "`S3Exception`"
            },
            {
              "kind": "text",
              "text": " - Thrown when checking for existence of the object"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "code",
              "text": "`StorageValidationErrorCode`"
            },
            {
              "kind": "text",
              "text": " - Thrown when\nsource or destination path is not defined."
            }
          ]
        }
      ]
    },
    "parameters": [
      4603
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 4568,
          "name": "CopyWithPathOutput",
          "package": "@aws-amplify/storage"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "4603": {
    "id": 4603,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The "
        },
        {
          "kind": "code",
          "text": "`CopyWithPathInput`"
        },
        {
          "kind": "text",
          "text": " object."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 4567,
      "name": "CopyWithPathInput",
      "package": "@aws-amplify/storage"
    }
  },
  "4604": {
    "id": 4604,
    "name": "copy",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [],
      "blockTags": [
        {
          "tag": "@deprecated",
          "content": [
            {
              "kind": "text",
              "text": "The "
            },
            {
              "kind": "code",
              "text": "`key`"
            },
            {
              "kind": "text",
              "text": " and "
            },
            {
              "kind": "code",
              "text": "`accessLevel`"
            },
            {
              "kind": "text",
              "text": " parameters are deprecated and may be removed in the next major version.\nPlease use "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "path",
              "target": "https://docs.amplify.aws/react/build-a-backend/storage/copy"
            },
            {
              "kind": "text",
              "text": " instead.\n\nCopy an object from a source to a destination object within the same bucket. Can optionally copy files across\ndifferent accessLevel or identityId (if source object's accessLevel is 'protected')."
            }
          ]
        },
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "Output containing the destination object key."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "service: "
            },
            {
              "kind": "code",
              "text": "`S3Exception`"
            },
            {
              "kind": "text",
              "text": " - Thrown when checking for existence of the object"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "code",
              "text": "`StorageValidationErrorCode`"
            },
            {
              "kind": "text",
              "text": " - Thrown when\nsource or destination key is not defined."
            }
          ]
        }
      ]
    },
    "parameters": [
      4605
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 4566,
          "name": "CopyOutput",
          "package": "@aws-amplify/storage"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "4605": {
    "id": 4605,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The "
        },
        {
          "kind": "code",
          "text": "`CopyInput`"
        },
        {
          "kind": "text",
          "text": " object."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 4565,
      "name": "CopyInput",
      "package": "@aws-amplify/storage"
    }
  },
  "4606": {
    "id": 4606,
    "name": "downloadData",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      4607,
      4609
    ]
  },
  "4607": {
    "id": 4607,
    "name": "downloadData",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Download S3 object data to memory"
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "A cancelable task exposing result promise from "
            },
            {
              "kind": "code",
              "text": "`result`"
            },
            {
              "kind": "text",
              "text": " property."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "service: "
            },
            {
              "kind": "code",
              "text": "`S3Exception`"
            },
            {
              "kind": "text",
              "text": " - thrown when checking for existence of the object"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "code",
              "text": "`StorageValidationErrorCode`"
            },
            {
              "kind": "text",
              "text": " - Validation errors"
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\n// Download a file from s3 bucket\nconst { body, eTag } = await downloadData({ path, options: {\n  onProgress, // Optional progress callback.\n} }).result;\n```"
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\n// Cancel a task\nconst downloadTask = downloadData({ path });\n//...\ndownloadTask.cancel();\ntry {\n\tawait downloadTask.result;\n} catch (error) {\n\tif(isCancelError(error)) {\n   // Handle error thrown by task cancelation.\n\t}\n}\n```"
            }
          ]
        }
      ]
    },
    "parameters": [
      4608
    ],
    "type": {
      "type": "reference",
      "target": 4572,
      "name": "DownloadDataWithPathOutput",
      "package": "@aws-amplify/storage"
    }
  },
  "4608": {
    "id": 4608,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The "
        },
        {
          "kind": "code",
          "text": "`DownloadDataWithPathInput`"
        },
        {
          "kind": "text",
          "text": " object."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 4571,
      "name": "DownloadDataWithPathInput",
      "package": "@aws-amplify/storage"
    }
  },
  "4609": {
    "id": 4609,
    "name": "downloadData",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [],
      "blockTags": [
        {
          "tag": "@deprecated",
          "content": [
            {
              "kind": "text",
              "text": "The "
            },
            {
              "kind": "code",
              "text": "`key`"
            },
            {
              "kind": "text",
              "text": " and "
            },
            {
              "kind": "code",
              "text": "`accessLevel`"
            },
            {
              "kind": "text",
              "text": " parameters are deprecated and may be removed in the next major version.\nPlease use "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "path",
              "target": "https://docs.amplify.aws/react/build-a-backend/storage/download/#downloaddata"
            },
            {
              "kind": "text",
              "text": " instead.\n\nDownload S3 object data to memory"
            }
          ]
        },
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "A cancelable task exposing result promise from "
            },
            {
              "kind": "code",
              "text": "`result`"
            },
            {
              "kind": "text",
              "text": " property."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "service: "
            },
            {
              "kind": "code",
              "text": "`S3Exception`"
            },
            {
              "kind": "text",
              "text": " - thrown when checking for existence of the object"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "code",
              "text": "`StorageValidationErrorCode`"
            },
            {
              "kind": "text",
              "text": " - Validation errors"
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\n// Download a file from s3 bucket\nconst { body, eTag } = await downloadData({ key, options: {\n  onProgress, // Optional progress callback.\n} }).result;\n```"
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\n// Cancel a task\nconst downloadTask = downloadData({ key });\n//...\ndownloadTask.cancel();\ntry {\n\tawait downloadTask.result;\n} catch (error) {\n\tif(isCancelError(error)) {\n   // Handle error thrown by task cancelation.\n\t}\n}\n```"
            }
          ]
        }
      ]
    },
    "parameters": [
      4610
    ],
    "type": {
      "type": "reference",
      "target": 4570,
      "name": "DownloadDataOutput",
      "package": "@aws-amplify/storage"
    }
  },
  "4610": {
    "id": 4610,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The "
        },
        {
          "kind": "code",
          "text": "`DownloadDataInput`"
        },
        {
          "kind": "text",
          "text": " object."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 4569,
      "name": "DownloadDataInput",
      "package": "@aws-amplify/storage"
    }
  },
  "4611": {
    "id": 4611,
    "name": "getProperties",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      4612,
      4614
    ]
  },
  "4612": {
    "id": 4612,
    "name": "getProperties",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Gets the properties of a file. The properties include S3 system metadata and\nthe user metadata that was provided when uploading the file."
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "Requested object properties."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "An "
            },
            {
              "kind": "code",
              "text": "`S3Exception`"
            },
            {
              "kind": "text",
              "text": " when the underlying S3 service returned error."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "A "
            },
            {
              "kind": "code",
              "text": "`StorageValidationErrorCode`"
            },
            {
              "kind": "text",
              "text": " when API call parameters are invalid."
            }
          ]
        }
      ]
    },
    "parameters": [
      4613
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 4576,
          "name": "GetPropertiesWithPathOutput",
          "package": "@aws-amplify/storage"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "4613": {
    "id": 4613,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The "
        },
        {
          "kind": "code",
          "text": "`GetPropertiesWithPathInput`"
        },
        {
          "kind": "text",
          "text": " object."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 4575,
      "name": "GetPropertiesWithPathInput",
      "package": "@aws-amplify/storage"
    }
  },
  "4614": {
    "id": 4614,
    "name": "getProperties",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [],
      "blockTags": [
        {
          "tag": "@deprecated",
          "content": [
            {
              "kind": "text",
              "text": "The "
            },
            {
              "kind": "code",
              "text": "`key`"
            },
            {
              "kind": "text",
              "text": " and "
            },
            {
              "kind": "code",
              "text": "`accessLevel`"
            },
            {
              "kind": "text",
              "text": " parameters are deprecated and may be removed in the next major version.\nPlease use "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "path",
              "target": "https://docs.amplify.aws/javascript/build-a-backend/storage/get-properties/"
            },
            {
              "kind": "text",
              "text": " instead.\n\nGets the properties of a file. The properties include S3 system metadata and\nthe user metadata that was provided when uploading the file."
            }
          ]
        },
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "Requested object properties."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "An "
            },
            {
              "kind": "code",
              "text": "`S3Exception`"
            },
            {
              "kind": "text",
              "text": " when the underlying S3 service returned error."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "A "
            },
            {
              "kind": "code",
              "text": "`StorageValidationErrorCode`"
            },
            {
              "kind": "text",
              "text": " when API call parameters are invalid."
            }
          ]
        }
      ]
    },
    "parameters": [
      4615
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 4574,
          "name": "GetPropertiesOutput",
          "package": "@aws-amplify/storage"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "4615": {
    "id": 4615,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The "
        },
        {
          "kind": "code",
          "text": "`GetPropertiesInput`"
        },
        {
          "kind": "text",
          "text": " object."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 4573,
      "name": "GetPropertiesInput",
      "package": "@aws-amplify/storage"
    }
  },
  "4616": {
    "id": 4616,
    "name": "getUrl",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      4617,
      4619
    ]
  },
  "4617": {
    "id": 4617,
    "name": "getUrl",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Get a temporary presigned URL to download the specified S3 object.\nThe presigned URL expires when the associated role used to sign the request expires or\nthe option  "
        },
        {
          "kind": "code",
          "text": "`expiresIn`"
        },
        {
          "kind": "text",
          "text": " is reached. The "
        },
        {
          "kind": "code",
          "text": "`expiresAt`"
        },
        {
          "kind": "text",
          "text": " property in the output object indicates when the URL MAY expire.\n\nBy default, it will not validate the object that exists in S3. If you set the "
        },
        {
          "kind": "code",
          "text": "`options.validateObjectExistence`"
        },
        {
          "kind": "text",
          "text": "\nto true, this method will verify the given object already exists in S3 before returning a presigned\nURL, and will throw "
        },
        {
          "kind": "code",
          "text": "`StorageError`"
        },
        {
          "kind": "text",
          "text": " if the object does not exist."
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "Presigned URL and timestamp when the URL may expire."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "service: "
            },
            {
              "kind": "code",
              "text": "`S3Exception`"
            },
            {
              "kind": "text",
              "text": " - thrown when checking for existence of the object"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "code",
              "text": "`StorageValidationErrorCode`"
            },
            {
              "kind": "text",
              "text": " - Validation errors\nthrown either username or key are not defined."
            }
          ]
        }
      ]
    },
    "parameters": [
      4618
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 4580,
          "name": "GetUrlWithPathOutput",
          "package": "@aws-amplify/storage"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "4618": {
    "id": 4618,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The "
        },
        {
          "kind": "code",
          "text": "`GetUrlWithPathInput`"
        },
        {
          "kind": "text",
          "text": " object."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 4579,
      "name": "GetUrlWithPathInput",
      "package": "@aws-amplify/storage"
    }
  },
  "4619": {
    "id": 4619,
    "name": "getUrl",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [],
      "blockTags": [
        {
          "tag": "@deprecated",
          "content": [
            {
              "kind": "text",
              "text": "The "
            },
            {
              "kind": "code",
              "text": "`key`"
            },
            {
              "kind": "text",
              "text": " and "
            },
            {
              "kind": "code",
              "text": "`accessLevel`"
            },
            {
              "kind": "text",
              "text": " parameters are deprecated and may be removed in the next major version.\nPlease use "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "path",
              "target": "https://docs.amplify.aws/javascript/build-a-backend/storage/download/#generate-a-download-url"
            },
            {
              "kind": "text",
              "text": " instead.\n\nGet a temporary presigned URL to download the specified S3 object.\nThe presigned URL expires when the associated role used to sign the request expires or\nthe option  "
            },
            {
              "kind": "code",
              "text": "`expiresIn`"
            },
            {
              "kind": "text",
              "text": " is reached. The "
            },
            {
              "kind": "code",
              "text": "`expiresAt`"
            },
            {
              "kind": "text",
              "text": " property in the output object indicates when the URL MAY expire.\n\nBy default, it will not validate the object that exists in S3. If you set the "
            },
            {
              "kind": "code",
              "text": "`options.validateObjectExistence`"
            },
            {
              "kind": "text",
              "text": "\nto true, this method will verify the given object already exists in S3 before returning a presigned\nURL, and will throw "
            },
            {
              "kind": "code",
              "text": "`StorageError`"
            },
            {
              "kind": "text",
              "text": " if the object does not exist."
            }
          ]
        },
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "Presigned URL and timestamp when the URL may expire."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "service: "
            },
            {
              "kind": "code",
              "text": "`S3Exception`"
            },
            {
              "kind": "text",
              "text": " - thrown when checking for existence of the object"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "code",
              "text": "`StorageValidationErrorCode`"
            },
            {
              "kind": "text",
              "text": " - Validation errors\nthrown either username or key are not defined."
            }
          ]
        }
      ]
    },
    "parameters": [
      4620
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 4578,
          "name": "GetUrlOutput",
          "package": "@aws-amplify/storage"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "4620": {
    "id": 4620,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The "
        },
        {
          "kind": "code",
          "text": "`GetUrlInput`"
        },
        {
          "kind": "text",
          "text": " object."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 4577,
      "name": "GetUrlInput",
      "package": "@aws-amplify/storage"
    }
  },
  "4621": {
    "id": 4621,
    "name": "isCancelError",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      4622
    ]
  },
  "4622": {
    "id": 4622,
    "name": "isCancelError",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Check if an error is caused by user calling "
        },
        {
          "kind": "code",
          "text": "`cancel()`"
        },
        {
          "kind": "text",
          "text": " on a upload/download task. If an overwriting error is\nsupplied to "
        },
        {
          "kind": "code",
          "text": "`task.cancel(errorOverwrite)`"
        },
        {
          "kind": "text",
          "text": ", this function will return "
        },
        {
          "kind": "code",
          "text": "`false`"
        },
        {
          "kind": "text",
          "text": "."
        }
      ]
    },
    "parameters": [
      4623
    ],
    "type": {
      "type": "predicate",
      "name": "error",
      "asserts": false,
      "targetType": {
        "type": "reference",
        "target": {
          "sourceFileName": "packages/storage/dist/esm/errors/CanceledError.d.ts",
          "qualifiedName": "CanceledError"
        },
        "name": "CanceledError",
        "package": "@aws-amplify/storage"
      }
    }
  },
  "4623": {
    "id": 4623,
    "name": "error",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "type": {
      "type": "intrinsic",
      "name": "unknown"
    }
  },
  "4624": {
    "id": 4624,
    "name": "list",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      4625,
      4627,
      4629,
      4631
    ]
  },
  "4625": {
    "id": 4625,
    "name": "list",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "List files in pages with the given "
        },
        {
          "kind": "code",
          "text": "`path`"
        },
        {
          "kind": "text",
          "text": ".\n"
        },
        {
          "kind": "code",
          "text": "`pageSize`"
        },
        {
          "kind": "text",
          "text": " is defaulted to 1000. Additionally, the result will include a "
        },
        {
          "kind": "code",
          "text": "`nextToken`"
        },
        {
          "kind": "text",
          "text": " if there are more items to retrieve."
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "A list of objects with path and metadata"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "service: "
            },
            {
              "kind": "code",
              "text": "`S3Exception`"
            },
            {
              "kind": "text",
              "text": " - S3 service errors thrown when checking for existence of bucket"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "code",
              "text": "`StorageValidationErrorCode`"
            },
            {
              "kind": "text",
              "text": " - thrown when there are issues with credentials"
            }
          ]
        }
      ]
    },
    "parameters": [
      4626
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 4590,
          "name": "ListPaginateWithPathOutput",
          "package": "@aws-amplify/storage"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "4626": {
    "id": 4626,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The "
        },
        {
          "kind": "code",
          "text": "`ListPaginateWithPathInput`"
        },
        {
          "kind": "text",
          "text": " object."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 4589,
      "name": "ListPaginateWithPathInput",
      "package": "@aws-amplify/storage"
    }
  },
  "4627": {
    "id": 4627,
    "name": "list",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "List all files from S3 for a given "
        },
        {
          "kind": "code",
          "text": "`path`"
        },
        {
          "kind": "text",
          "text": ". You can set "
        },
        {
          "kind": "code",
          "text": "`listAll`"
        },
        {
          "kind": "text",
          "text": " to true in "
        },
        {
          "kind": "code",
          "text": "`options`"
        },
        {
          "kind": "text",
          "text": " to get all the files from S3."
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "A list of all objects with path and metadata"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "service: "
            },
            {
              "kind": "code",
              "text": "`S3Exception`"
            },
            {
              "kind": "text",
              "text": " - S3 service errors thrown when checking for existence of bucket"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "code",
              "text": "`StorageValidationErrorCode`"
            },
            {
              "kind": "text",
              "text": "  - thrown when there are issues with credentials"
            }
          ]
        }
      ]
    },
    "parameters": [
      4628
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 4584,
          "name": "ListAllWithPathOutput",
          "package": "@aws-amplify/storage"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "4628": {
    "id": 4628,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The "
        },
        {
          "kind": "code",
          "text": "`ListAllWithPathInput`"
        },
        {
          "kind": "text",
          "text": " object."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 4583,
      "name": "ListAllWithPathInput",
      "package": "@aws-amplify/storage"
    }
  },
  "4629": {
    "id": 4629,
    "name": "list",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [],
      "blockTags": [
        {
          "tag": "@deprecated",
          "content": [
            {
              "kind": "text",
              "text": "The "
            },
            {
              "kind": "code",
              "text": "`prefix`"
            },
            {
              "kind": "text",
              "text": " and "
            },
            {
              "kind": "code",
              "text": "`accessLevel`"
            },
            {
              "kind": "text",
              "text": " parameters are deprecated and may be removed in the next major version.\nPlease use "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "path",
              "target": "https://docs.amplify.aws/react/build-a-backend/storage/list"
            },
            {
              "kind": "text",
              "text": " instead.\nList files in pages with the given "
            },
            {
              "kind": "code",
              "text": "`prefix`"
            },
            {
              "kind": "text",
              "text": ".\n"
            },
            {
              "kind": "code",
              "text": "`pageSize`"
            },
            {
              "kind": "text",
              "text": " is defaulted to 1000. Additionally, the result will include a "
            },
            {
              "kind": "code",
              "text": "`nextToken`"
            },
            {
              "kind": "text",
              "text": " if there are more items to retrieve."
            }
          ]
        },
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "A list of objects with key and metadata"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "service: "
            },
            {
              "kind": "code",
              "text": "`S3Exception`"
            },
            {
              "kind": "text",
              "text": " - S3 service errors thrown when checking for existence of bucket"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "code",
              "text": "`StorageValidationErrorCode`"
            },
            {
              "kind": "text",
              "text": " - thrown when there are issues with credentials"
            }
          ]
        }
      ]
    },
    "parameters": [
      4630
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 4586,
          "name": "ListPaginateOutput",
          "package": "@aws-amplify/storage"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "4630": {
    "id": 4630,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {
      "isOptional": true
    },
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The "
        },
        {
          "kind": "code",
          "text": "`ListPaginateInput`"
        },
        {
          "kind": "text",
          "text": " object."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 4585,
      "name": "ListPaginateInput",
      "package": "@aws-amplify/storage"
    }
  },
  "4631": {
    "id": 4631,
    "name": "list",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [],
      "blockTags": [
        {
          "tag": "@deprecated",
          "content": [
            {
              "kind": "text",
              "text": "The "
            },
            {
              "kind": "code",
              "text": "`prefix`"
            },
            {
              "kind": "text",
              "text": " and "
            },
            {
              "kind": "code",
              "text": "`accessLevel`"
            },
            {
              "kind": "text",
              "text": " parameters are deprecated and may be removed in the next major version.\nPlease use "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "path",
              "target": "https://docs.amplify.aws/react/build-a-backend/storage/list"
            },
            {
              "kind": "text",
              "text": " instead.\nList all files from S3 for a given "
            },
            {
              "kind": "code",
              "text": "`prefix`"
            },
            {
              "kind": "text",
              "text": ". You can set "
            },
            {
              "kind": "code",
              "text": "`listAll`"
            },
            {
              "kind": "text",
              "text": " to true in "
            },
            {
              "kind": "code",
              "text": "`options`"
            },
            {
              "kind": "text",
              "text": " to get all the files from S3."
            }
          ]
        },
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "A list of all objects with key and metadata"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "service: "
            },
            {
              "kind": "code",
              "text": "`S3Exception`"
            },
            {
              "kind": "text",
              "text": " - S3 service errors thrown when checking for existence of bucket"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "code",
              "text": "`StorageValidationErrorCode`"
            },
            {
              "kind": "text",
              "text": "  - thrown when there are issues with credentials"
            }
          ]
        }
      ]
    },
    "parameters": [
      4632
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 4582,
          "name": "ListAllOutput",
          "package": "@aws-amplify/storage"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "4632": {
    "id": 4632,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {
      "isOptional": true
    },
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The "
        },
        {
          "kind": "code",
          "text": "`ListAllInput`"
        },
        {
          "kind": "text",
          "text": " object."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 4581,
      "name": "ListAllInput",
      "package": "@aws-amplify/storage"
    }
  },
  "4633": {
    "id": 4633,
    "name": "remove",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      4634,
      4636
    ]
  },
  "4634": {
    "id": 4634,
    "name": "remove",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Remove a file from your S3 bucket."
        }
      ],
      "blockTags": [
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "Output containing the removed object path."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "service: "
            },
            {
              "kind": "code",
              "text": "`S3Exception`"
            },
            {
              "kind": "text",
              "text": " - S3 service errors thrown while while removing the object."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "code",
              "text": "`StorageValidationErrorCode`"
            },
            {
              "kind": "text",
              "text": " - Validation errors thrown\nwhen there is no path or path is empty or path has a leading slash."
            }
          ]
        }
      ]
    },
    "parameters": [
      4635
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 4596,
          "name": "RemoveWithPathOutput",
          "package": "@aws-amplify/storage"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "4635": {
    "id": 4635,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The "
        },
        {
          "kind": "code",
          "text": "`RemoveWithPathInput`"
        },
        {
          "kind": "text",
          "text": " object."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 4595,
      "name": "RemoveWithPathInput",
      "package": "@aws-amplify/storage"
    }
  },
  "4636": {
    "id": 4636,
    "name": "remove",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [],
      "blockTags": [
        {
          "tag": "@deprecated",
          "content": [
            {
              "kind": "text",
              "text": "The "
            },
            {
              "kind": "code",
              "text": "`key`"
            },
            {
              "kind": "text",
              "text": " and "
            },
            {
              "kind": "code",
              "text": "`accessLevel`"
            },
            {
              "kind": "text",
              "text": " parameters are deprecated and may be removed in the next major version.\nPlease use "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "path",
              "target": "https://docs.amplify.aws/react/build-a-backend/storage/remove"
            },
            {
              "kind": "text",
              "text": " instead.\n\nRemove a file from your S3 bucket."
            }
          ]
        },
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "Output containing the removed object key"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "service: "
            },
            {
              "kind": "code",
              "text": "`S3Exception`"
            },
            {
              "kind": "text",
              "text": " - S3 service errors thrown while while removing the object"
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "validation: "
            },
            {
              "kind": "code",
              "text": "`StorageValidationErrorCode`"
            },
            {
              "kind": "text",
              "text": " - Validation errors thrown\nwhen there is no key or its empty."
            }
          ]
        }
      ]
    },
    "parameters": [
      4637
    ],
    "type": {
      "type": "reference",
      "target": {
        "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "qualifiedName": "Promise"
      },
      "typeArguments": [
        {
          "type": "reference",
          "target": 4594,
          "name": "RemoveOutput",
          "package": "@aws-amplify/storage"
        }
      ],
      "name": "Promise",
      "package": "typescript"
    }
  },
  "4637": {
    "id": 4637,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "The "
        },
        {
          "kind": "code",
          "text": "`RemoveInput`"
        },
        {
          "kind": "text",
          "text": " object."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 4593,
      "name": "RemoveInput",
      "package": "@aws-amplify/storage"
    }
  },
  "4638": {
    "id": 4638,
    "name": "uploadData",
    "variant": "declaration",
    "kind": 64,
    "flags": {},
    "signatures": [
      4639,
      4641
    ]
  },
  "4639": {
    "id": 4639,
    "name": "uploadData",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Upload data to the specified S3 object path. By default uses single PUT operation to upload if the payload is less than 5MB.\nOtherwise, uses multipart upload to upload the payload. If the payload length cannot be determined, uses multipart upload.\n\nLimitations:\n* Maximum object size is 5TB.\n* Maximum object size if the size cannot be determined before upload is 50GB."
        }
      ],
      "blockTags": [
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "Service: "
            },
            {
              "kind": "code",
              "text": "`S3Exception`"
            },
            {
              "kind": "text",
              "text": " thrown when checking for existence of the object."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "Validation: "
            },
            {
              "kind": "code",
              "text": "`StorageValidationErrorCode`"
            },
            {
              "kind": "text",
              "text": " thrown when a validation error occurs."
            }
          ]
        },
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "A cancelable and resumable task exposing result promise from "
            },
            {
              "kind": "code",
              "text": "`result`"
            },
            {
              "kind": "text",
              "text": "\n\tproperty."
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\n// Upload a file to s3 bucket\nawait uploadData({ path, data: file, options: {\n  onProgress, // Optional progress callback.\n} }).result;\n```"
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\n// Cancel a task\nconst uploadTask = uploadData({ path, data: file });\n//...\nuploadTask.cancel();\ntry {\n  await uploadTask.result;\n} catch (error) {\n  if(isCancelError(error)) {\n    // Handle error thrown by task cancelation.\n  }\n}\n```"
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\n// Pause and resume a task\nconst uploadTask = uploadData({ path, data: file });\n//...\nuploadTask.pause();\n//...\nuploadTask.resume();\n//...\nawait uploadTask.result;\n```"
            }
          ]
        }
      ]
    },
    "parameters": [
      4640
    ],
    "type": {
      "type": "reference",
      "target": 4600,
      "name": "UploadDataWithPathOutput",
      "package": "@aws-amplify/storage"
    }
  },
  "4640": {
    "id": 4640,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "A "
        },
        {
          "kind": "code",
          "text": "`UploadDataWithPathInput`"
        },
        {
          "kind": "text",
          "text": " object."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 4599,
      "name": "UploadDataWithPathInput",
      "package": "@aws-amplify/storage"
    }
  },
  "4641": {
    "id": 4641,
    "name": "uploadData",
    "variant": "signature",
    "kind": 4096,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "Upload data to the specified S3 object key. By default uses single PUT operation to upload if the payload is less than 5MB.\nOtherwise, uses multipart upload to upload the payload. If the payload length cannot be determined, uses multipart upload.\n\nLimitations:\n* Maximum object size is 5TB.\n* Maximum object size if the size cannot be determined before upload is 50GB."
        }
      ],
      "blockTags": [
        {
          "tag": "@deprecated",
          "content": [
            {
              "kind": "text",
              "text": "The "
            },
            {
              "kind": "code",
              "text": "`key`"
            },
            {
              "kind": "text",
              "text": " and "
            },
            {
              "kind": "code",
              "text": "`accessLevel`"
            },
            {
              "kind": "text",
              "text": " parameters are deprecated and will be removed in next major version.\nPlease use "
            },
            {
              "kind": "inline-tag",
              "tag": "@link",
              "text": "path",
              "target": "https://docs.amplify.aws/javascript/build-a-backend/storage/upload/#uploaddata"
            },
            {
              "kind": "text",
              "text": " instead."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "Service: "
            },
            {
              "kind": "code",
              "text": "`S3Exception`"
            },
            {
              "kind": "text",
              "text": " thrown when checking for existence of the object."
            }
          ]
        },
        {
          "tag": "@throws",
          "content": [
            {
              "kind": "text",
              "text": "Validation: "
            },
            {
              "kind": "code",
              "text": "`StorageValidationErrorCode`"
            },
            {
              "kind": "text",
              "text": " thrown when a validation error occurs."
            }
          ]
        },
        {
          "tag": "@returns",
          "content": [
            {
              "kind": "text",
              "text": "A cancelable and resumable task exposing result promise from the "
            },
            {
              "kind": "code",
              "text": "`result`"
            },
            {
              "kind": "text",
              "text": " property."
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\n// Upload a file to s3 bucket\nawait uploadData({ key, data: file, options: {\n  onProgress, // Optional progress callback.\n} }).result;\n```"
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\n// Cancel a task\nconst uploadTask = uploadData({ key, data: file });\n//...\nuploadTask.cancel();\ntry {\n  await uploadTask.result;\n} catch (error) {\n  if(isCancelError(error)) {\n    // Handle error thrown by task cancelation.\n  }\n}\n```"
            }
          ]
        },
        {
          "tag": "@example",
          "content": [
            {
              "kind": "code",
              "text": "```ts\n// Pause and resume a task\nconst uploadTask = uploadData({ key, data: file });\n//...\nuploadTask.pause();\n//...\nuploadTask.resume();\n//...\nawait uploadTask.result;\n```"
            }
          ]
        }
      ]
    },
    "parameters": [
      4642
    ],
    "type": {
      "type": "reference",
      "target": 4598,
      "name": "UploadDataOutput",
      "package": "@aws-amplify/storage"
    }
  },
  "4642": {
    "id": 4642,
    "name": "input",
    "variant": "param",
    "kind": 32768,
    "flags": {},
    "comment": {
      "summary": [
        {
          "kind": "text",
          "text": "A "
        },
        {
          "kind": "code",
          "text": "`UploadDataInput`"
        },
        {
          "kind": "text",
          "text": " object."
        }
      ]
    },
    "type": {
      "type": "reference",
      "target": 4597,
      "name": "UploadDataInput",
      "package": "@aws-amplify/storage"
    }
  },
  "categories": [
    {
      "id": 1449,
      "name": "auth",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "children": [
        {
          "id": 1805,
          "name": "autoSignIn",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1806
          ]
        },
        {
          "id": 1807,
          "name": "confirmResetPassword",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1808
          ]
        },
        {
          "id": 1810,
          "name": "confirmSignIn",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1811
          ]
        },
        {
          "id": 1813,
          "name": "confirmSignUp",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1814
          ]
        },
        {
          "id": 1816,
          "name": "confirmUserAttribute",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1817
          ]
        },
        {
          "id": 1819,
          "name": "decodeJWT",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1820
          ]
        },
        {
          "id": 1822,
          "name": "deleteUser",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1823
          ]
        },
        {
          "id": 1824,
          "name": "deleteUserAttributes",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1825
          ]
        },
        {
          "id": 1827,
          "name": "fetchAuthSession",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1828
          ]
        },
        {
          "id": 1830,
          "name": "fetchDevices",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1831
          ]
        },
        {
          "id": 1832,
          "name": "fetchMFAPreference",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1833
          ]
        },
        {
          "id": 1834,
          "name": "fetchUserAttributes",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1835
          ]
        },
        {
          "id": 1836,
          "name": "forgetDevice",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1837
          ]
        },
        {
          "id": 1839,
          "name": "getCurrentUser",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1840
          ]
        },
        {
          "id": 1841,
          "name": "rememberDevice",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1842
          ]
        },
        {
          "id": 1843,
          "name": "resendSignUpCode",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1844
          ]
        },
        {
          "id": 1846,
          "name": "resetPassword",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1847
          ]
        },
        {
          "id": 1849,
          "name": "sendUserAttributeVerificationCode",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1850
          ]
        },
        {
          "id": 1852,
          "name": "setUpTOTP",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1853
          ]
        },
        {
          "id": 1854,
          "name": "signIn",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1855
          ]
        },
        {
          "id": 1857,
          "name": "signInWithRedirect",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1858
          ]
        },
        {
          "id": 1860,
          "name": "signOut",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1861
          ]
        },
        {
          "id": 1863,
          "name": "signUp",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1864
          ]
        },
        {
          "id": 1866,
          "name": "updateMFAPreference",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1867
          ]
        },
        {
          "id": 1869,
          "name": "updatePassword",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1870
          ]
        },
        {
          "id": 1872,
          "name": "updateUserAttribute",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1873
          ]
        },
        {
          "id": 1875,
          "name": "updateUserAttributes",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1876
          ]
        },
        {
          "id": 1878,
          "name": "verifyTOTPSetup",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1879
          ]
        }
      ],
      "groups": [
        {
          "title": "Modules",
          "children": [
            1450
          ]
        },
        {
          "title": "Classes",
          "children": [
            1711
          ]
        },
        {
          "title": "Interfaces",
          "children": [
            1730,
            1735,
            1739,
            1743,
            1746,
            1752,
            1754,
            1757,
            1761,
            1767
          ]
        },
        {
          "title": "Type Aliases",
          "children": [
            1770,
            1772,
            1773,
            1774,
            1775,
            1776,
            1777,
            1778,
            1779,
            1780,
            1781,
            1782,
            1783,
            1784,
            1785,
            1786,
            1787,
            1788,
            1789,
            1790,
            1791,
            1792,
            1793,
            1794,
            1795,
            1796,
            1797,
            1798,
            1799,
            1800,
            1801,
            1802,
            1803,
            1804
          ]
        },
        {
          "title": "Functions",
          "children": [
            1805,
            1807,
            1810,
            1813,
            1816,
            1819,
            1822,
            1824,
            1827,
            1830,
            1832,
            1834,
            1836,
            1839,
            1841,
            1843,
            1846,
            1849,
            1852,
            1854,
            1857,
            1860,
            1863,
            1866,
            1869,
            1872,
            1875,
            1878
          ]
        }
      ]
    },
    {
      "id": 4339,
      "name": "storage",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "children": [
        {
          "id": 4601,
          "name": "copy",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            4602,
            4604
          ]
        },
        {
          "id": 4606,
          "name": "downloadData",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            4607,
            4609
          ]
        },
        {
          "id": 4611,
          "name": "getProperties",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            4612,
            4614
          ]
        },
        {
          "id": 4616,
          "name": "getUrl",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            4617,
            4619
          ]
        },
        {
          "id": 4621,
          "name": "isCancelError",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            4622
          ]
        },
        {
          "id": 4624,
          "name": "list",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            4625,
            4627,
            4629,
            4631
          ]
        },
        {
          "id": 4633,
          "name": "remove",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            4634,
            4636
          ]
        },
        {
          "id": 4638,
          "name": "uploadData",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            4639,
            4641
          ]
        }
      ],
      "groups": [
        {
          "title": "Modules",
          "children": [
            4340
          ]
        },
        {
          "title": "Classes",
          "children": [
            4543
          ]
        },
        {
          "title": "Interfaces",
          "children": [
            4562
          ]
        },
        {
          "title": "Type Aliases",
          "children": [
            4565,
            4566,
            4567,
            4568,
            4569,
            4570,
            4571,
            4572,
            4573,
            4574,
            4575,
            4576,
            4577,
            4578,
            4579,
            4580,
            4581,
            4582,
            4583,
            4584,
            4585,
            4586,
            4589,
            4590,
            4593,
            4594,
            4595,
            4596,
            4597,
            4598,
            4599,
            4600
          ]
        },
        {
          "title": "Functions",
          "children": [
            4601,
            4606,
            4611,
            4616,
            4621,
            4624,
            4633,
            4638
          ]
        }
      ]
    },
    {
      "id": 297,
      "name": "analytics",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "children": [
        {
          "id": 366,
          "name": "configureAutoTrack",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            367
          ]
        },
        {
          "id": 369,
          "name": "disable",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            370
          ]
        },
        {
          "id": 371,
          "name": "enable",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            372
          ]
        },
        {
          "id": 373,
          "name": "flushEvents",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            374
          ]
        },
        {
          "id": 375,
          "name": "identifyUser",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            376
          ]
        },
        {
          "id": 378,
          "name": "record",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            379
          ]
        }
      ],
      "groups": [
        {
          "title": "Modules",
          "children": [
            298
          ]
        },
        {
          "title": "Type Aliases",
          "children": [
            363,
            364,
            365
          ]
        },
        {
          "title": "Functions",
          "children": [
            366,
            369,
            371,
            373,
            375,
            378
          ]
        }
      ]
    },
    {
      "id": 423,
      "name": "api",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "children": [
        {
          "id": 1343,
          "name": "del",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1344
          ]
        },
        {
          "id": 1346,
          "name": "generateClient",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1347
          ]
        },
        {
          "id": 1350,
          "name": "get",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1351
          ]
        },
        {
          "id": 1353,
          "name": "head",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1354
          ]
        },
        {
          "id": 1356,
          "name": "isCancelError",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1357
          ]
        },
        {
          "id": 1359,
          "name": "patch",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1360
          ]
        },
        {
          "id": 1362,
          "name": "post",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1363
          ]
        },
        {
          "id": 1365,
          "name": "put",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            1366
          ]
        }
      ],
      "groups": [
        {
          "title": "Modules",
          "children": [
            424
          ]
        },
        {
          "title": "Enumerations",
          "children": [
            1286,
            1295
          ]
        },
        {
          "title": "Classes",
          "children": [
            1301
          ]
        },
        {
          "title": "Interfaces",
          "children": [
            1322
          ]
        },
        {
          "title": "Type Aliases",
          "children": [
            1327,
            1329,
            1333,
            1335,
            1339
          ]
        },
        {
          "title": "Variables",
          "children": [
            1342
          ]
        },
        {
          "title": "Functions",
          "children": [
            1343,
            1346,
            1350,
            1353,
            1356,
            1359,
            1362,
            1365
          ]
        }
      ]
    },
    {
      "id": 3820,
      "name": "in-app-messaging",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "children": [
        {
          "id": 3891,
          "name": "clearMessages",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            3892
          ]
        },
        {
          "id": 3893,
          "name": "dispatchEvent",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            3894
          ]
        },
        {
          "id": 3896,
          "name": "identifyUser",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            3897
          ]
        },
        {
          "id": 3899,
          "name": "initializeInAppMessaging",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            3900
          ]
        },
        {
          "id": 3901,
          "name": "notifyMessageInteraction",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            3902
          ]
        },
        {
          "id": 3904,
          "name": "onMessageActionTaken",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            3905
          ]
        },
        {
          "id": 3907,
          "name": "onMessageDismissed",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            3908
          ]
        },
        {
          "id": 3910,
          "name": "onMessageDisplayed",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            3911
          ]
        },
        {
          "id": 3913,
          "name": "onMessageReceived",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            3914
          ]
        },
        {
          "id": 3916,
          "name": "setConflictHandler",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            3917
          ]
        },
        {
          "id": 3919,
          "name": "syncMessages",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "signatures": [
            3920
          ]
        }
      ],
      "groups": [
        {
          "title": "Modules",
          "children": [
            3821
          ]
        },
        {
          "title": "Interfaces",
          "children": [
            3850,
            3855,
            3860,
            3867,
            3869,
            3874
          ]
        },
        {
          "title": "Type Aliases",
          "children": [
            3877,
            3878,
            3879,
            3880,
            3881,
            3882,
            3883,
            3884,
            3885,
            3886,
            3887,
            3888,
            3889,
            3890
          ]
        },
        {
          "title": "Functions",
          "children": [
            3891,
            3893,
            3896,
            3899,
            3901,
            3904,
            3907,
            3910,
            3913,
            3916,
            3919
          ]
        }
      ]
    }
  ]
}